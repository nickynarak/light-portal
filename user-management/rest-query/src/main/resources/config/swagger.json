{"basePath": "/v1","paths":{"/user/name":{"get":{"x-accepts": "application/json","security": [
                    {
                        "user_auth": [
                            "user.r"
                        ]
                    }
                ],"description": "Return a user by user name","operationId": "getByName","responses":{"200":{"schema": {
                            "$ref": "#/definitions/User"
                        },"description": "Successful response"}},"parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "login name of user",
                        "required": true,
                        "type": "string"
                    }
                ],"x-contentType": "application/json"}},"/health":{"get":{"responses":{"200":{"description":"successful operation"}},"parameters":[]}},"/user/login":{"put":{"x-accepts": "application/json","security": [
                    {
                        "user_auth": [
                            "user.r", "user.w"
                        ]
                    }
                ],"description": "User login process","operationId": "loginUser","responses":{"200":{"schema": {
                            "$ref": "#/definitions/User"
                        },"description": "Successful response"}},"parameters": [
                    {
                       "in": "body",
                        "name": "body",
                        "description": "user login form object for login",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginForm"
                        }
                    }                    
                ],"x-contentType": "application/json"}},"/user":{"get":{"x-accepts": "application/json","security": [
                    {
                        "user_auth": [
                            "user.a"
                        ]
                    }
                ],"description": "Return an array of user","operationId": "getAll","responses":{"200":{"schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        },"description": "Successful response"}},"parameters": [],"x-contentType": "application/json"}},"/server/info":{"get":{"security":[{"user_auth":["server.info.r"]}],"responses":{"200":{"description":"successful operation"}},"parameters":[]}},"/user/email":{"get":{"description": "Return a user by email","operationId": "getByEmail","responses":{"200":{"schema": {
                            "$ref": "#/definitions/User"
                        },"description": "Successful response"}},"security": [
                    {
                        "user_auth": [
                            "user.r"
                        ]
                    }
                ],"parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "unqiue email of user",
                        "required": true,
                        "type": "string"
                    }
                ]}},"/user/{id}":{"get":{"summary": "Find User by ID","security": [
                    {
                        "user_auth": [
                            "user.r"
                        ]
                    }
                ],"produces": [
                    "application/xml",
                    "application/json"
                ],"description": "Returns a single User","operationId": "getUserById","responses":{"400": {
                        "description": "Invalid ID supplied"
                    },"404": {
                        "description": "User not found"
                    },"200":{"schema": {
                            "$ref": "#/definitions/User"
                        },"description": "Successful response"}},"parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of User to return",
                        "required": true,
                        "type": "string"
                    }
                ],"tags": [
                    "user"
                ]}}},"host": "user.networknt.com","produces": [
        "application/json"
    ],"schemes": [
        "http"
    ],"securityDefinitions":{"user_auth":{"scopes":{"user.r": "read user","user.a": "admin user","server.info.r":"read server info","user.w": "write user"},"type": "oauth2","authorizationUrl": "http://localhost:8080/oauth2/code","flow": "implicit"}},"definitions":{"ContactData":{"type": "object","properties":{"birthday":{"type": "string","format": "date-time","description": "birthday of the user"},"firstName":{"type": "string","description": "firstName of the user"},"lastName":{"type": "string","description": "firstName of the user"},"gender":{"type": "string","description": "user gender type","enum":["FEMALE",
                        "MALE",
                        "UNKNOWN"]},"email":{"type": "string","description": "email address of the user"}}},"LoginForm":{"type": "object","properties":{"nameOrEmail":{"type": "string","description": "user screenName or email for login"},"password":{"type": "string","description": "user password for user login"},"token":{"type": "string","description": "token with the user login"}}},"User":{"type": "object","properties":{"password":{"type": "string","description": "raw password of user"},"contactData":{"$ref": "#/definitions/ContactData"},"timezone":{"type": "string","description": "timezone name of user"},"host":{"type": "string","description": "user host indicator the organization for user"},"id":{"type": "string","description": "a UUID generated"},"screenName":{"type": "string","description": "screenName of user"},"locale":{"type": "string","description": "locale display name of user"}}}},"swagger": "2.0","info": {
        "description": "User Management service query side API is a microserice that used for user management on light-portal  built on top of light-4j framework.",
        "version": "1.0.0",
        "title": "User Management service query API",
        "contact": {
            "email": "stevehu@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },"consumes": [
        "application/json"
    ]}